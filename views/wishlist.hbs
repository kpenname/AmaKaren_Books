<div class="page-body" id="wishlist-page">
    <h2>Your Wishlist</h2>
    
    <div>    
        {{#each wishlist}}
            {{#if title}} 
                <p>{{title}} by: {{author}}</p>                
            {{/if}}
            {{else}}
                <p>You don't have any books in your wishlist yet.</p>
        {{/each}}
    </div>

    <div class="form-header">
        <h3 id="wishlistHeading">Add to your wishlist</h3>
    </div>
    <div id="addWishlist" style="visibility: hidden; height: 0;">
        <form name="addWishlist" action="/account/addWishlist" method="POST" class="form" enctype="application/x-www-form-urlencoded" id="addWishlist">
            <input type="text" class="input" id="txtWishlistTitle" name="txtWishlistTitle" placeholder="Title" required />
            <input type="text" class="input" id="txtWishlistAuthor" name="txtWishlistAuthor" placeholder="Author" required />       
            
            <button class="btn" type="submit">Add this book</button>
        </form>
    </div>

    <div id="map"></div>
</div>


<script>
mapboxgl.accessToken =
  "pk.eyJ1IjoicGVubmFtZSIsImEiOiJja2EyaW5taXUwMmFyM2VvNmNuempvMThlIn0.0DFa51G5_9CQxGn1okW6hA";
let map;

    let wishlistHeading = document.getElementById("wishlistHeading");
    wishlistHeading.addEventListener("click", showAddWishlist);
    wishlistHeading.style.cursor = "pointer";

    function showAddWishlist() {
        let addWishlist = document.getElementById("addWishlist");
        if (addWishlist.style.visibility === "hidden") {
            addWishlist.style.visibility = "visible";
            addWishlist.style.height = "100%";
        } else {
            addWishlist.style.visibility = "hidden";
            addWishlist.style.height = "0";
        }
    }
 
function displayMap() {  
  map = new mapboxgl.Map({
    container: "map",
    style: "mapbox://styles/penname/ckav7dgfc3ahh1iqk14lkdzez",
    center: [-75.747, 45.455],
    zoom: 12,
  });

  map.on("load", () => {
    map.resize();
  });  
}

useCoordinates();

async function getPostalCode () {   
    let res = await fetch("/account/getPostalCode");
    let code = await res.json();
    let userPostalCode = code[0].postCode;
    return userPostalCode;
}
async function getGeoLocationWithPostalCode (){    
    let pc = await getPostalCode();
    let longLat=[];
    try {
        let res = await fetch("/geoCoding/" + pc);
        let coordinates = await res.json();
        longLat.push(coordinates.longt);
        longLat.push(coordinates.latt);

        return longLat;

    }catch (err) {
        console.log(err);
    }    
}
async function useCoordinates(){
    let lnglat = await getGeoLocationWithPostalCode();
    let userMarker = new mapboxgl.Marker().setLngLat([lnglat[0], lnglat[1]]).addTo(map);    
}
displayMap();
</script>